[{"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/index.js":"1","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/App.js":"2","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/serviceWorker.js":"3","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Calendar.js":"4","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Forms/AddRoom.js":"5","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Forms/AddReservation.js":"6","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Helpers/removeEmptyFields.js":"7","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Helpers/ReactHookFormSelect.js":"8","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Forms/BookedRoomList.js":"9"},{"size":503,"mtime":1602526398465,"results":"10","hashOfConfig":"11"},{"size":272,"mtime":1602526398462,"results":"12","hashOfConfig":"11"},{"size":5086,"mtime":1602526398465,"results":"13","hashOfConfig":"11"},{"size":7733,"mtime":1609678522033,"results":"14","hashOfConfig":"11"},{"size":10739,"mtime":1611126012215,"results":"15","hashOfConfig":"11"},{"size":22638,"mtime":1611126088668,"results":"16","hashOfConfig":"11"},{"size":205,"mtime":1602526398462,"results":"17","hashOfConfig":"11"},{"size":870,"mtime":1602577924504,"results":"18","hashOfConfig":"11"},{"size":2498,"mtime":1609683860937,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1yb1aqt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/index.js",[],["43","44"],"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/App.js",[],"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/serviceWorker.js",[],"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Calendar.js",["45"],"import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\nimport calendarInteraction from '@fullcalendar/interaction';\nimport './Calendar.css';\nimport AddRoom from './Forms/AddRoom';\nimport AddReservation from './Forms/AddReservation';\nimport axios from 'axios';\n\n\nclass Calendar extends React.Component {\n\n    state = {\n        showAddRoom: false,\n        showAddReservation: false,\n        addReservation: false,\n        modifyReservation: false,\n        modifyRoom: false,\n        addRoom: false,\n        modifyRoomData: {},\n        activeChecked: false,\n        modifyReservationData: {},\n        modifyBookedRoomsData: [],\n        rooms: {},\n    };\n\n    componentDidMount() {\n        axios.get(this.props.rest_url + 'room')\n            .then((roomData) => {\n                console.log(\"Fetched room data:\");\n                this.setState({ rooms: roomData.data });\n                console.log(this.state.rooms);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }\n\n    calendarRef = React.createRef();\n\n    closeRoomAddHandler = () => {\n        this.setState({ showAddRoom: false });\n        this.setState({ modifyRoomData: {} });\n        this.setState({ addRoom: false });\n        this.setState({ modifyRoom: false });\n    }\n\n    closeReservationAddHandler = () => {\n        this.setState({ showAddReservation: false });\n        this.setState({ modifyReservation: false });\n        this.setState({ addReservation: false });\n        this.setState({ modifyReservationData: {} });\n    }\n\n    handleEventClick = (clickInfo) => {\n        let getReservationData = {};\n        getReservationData.id = clickInfo.event.id;\n        getReservationData.room_id = clickInfo.event._def.resourceIds;\n        console.log(\"Reservation ID:\");\n        console.log(getReservationData.id);\n        axios.get(this.props.rest_url + 'reservation/' + getReservationData.id)\n            .then((reservationData) => {\n                console.log(\"Reservation Data from Calendar:\");\n                console.log(reservationData);\n                let roomsBooked = [];\n                reservationData.data.map((data) => {\n                    console.log(\"Room: \" + data.room_id + \" Kids: \" + data.kids + \" Adults: \" + data.adults);\n                    roomsBooked[data.room_id] = { adults: data.adults, kids: data.kids };\n                });\n                this.setState({ modifyBookedRoomsData: roomsBooked });\n                console.log(this.state.modifyBookedRoomsData);\n                this.setState({ modifyReservationData: reservationData.data[0] });\n                this.setState({ modifyReservation: true });\n                this.setState({ showAddReservation: true });\n            })\n            .catch((error) => {\n                console.log(error)\n            });\n    }\n\n    handleResourceClick = (arg) => {\n        arg.el.addEventListener(\"click\", () => {\n            console.log(arg.resource.id);\n            axios.get(this.props.rest_url + 'room/' + arg.resource.id)\n                .then((roomInfo) => {\n                    console.log(roomInfo.data);\n                    if (roomInfo.data.active === \"1\") {\n                        this.setState({ activeChecked: true });\n                    }\n                    else {\n                        this.setState({ activeChecked: false });\n                    }\n\n                    this.setState({ modifyRoomData: roomInfo.data });\n                    this.setState({ modifyRoom: true });\n                    this.setState({ showAddRoom: true });\n                }\n\n                );\n        });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <FullCalendar\n                    ref={this.calendarRef}\n                    schedulerLicenseKey=\"GPL-My-Project-Is-Open-Source\"\n                    plugins={[calendarInteraction, resourceTimelinePlugin]}\n                    aspectRatio={1.5}\n                    slotDuration={'12:00'}\n                    scrollTime={'00:00'}\n                    initialView={'resourceTimelineThirtyDays'}\n                    views={{\n                        resourceTimelineThirtyDays: {\n                            type: 'resourceTimeline',\n                            duration: { days: 30 },\n                            buttonText: '30 days'\n                        }\n                    }}\n                    selectable={true}\n                    editable={true}\n                    headerToolbar={{\n                        left: 'addRoom addReservation today prev next',\n                        center: 'title',\n                        right: 'resourceTimelineThirtyDays resourceTimelineMonth resourceTimelineWeek',\n                    }}\n                    customButtons={{\n                        addRoom: {\n                            text: 'Add room',\n                            click: () => {\n                                this.setState({ showAddRoom: true });\n                                this.setState({ addRoom: true });\n                            },\n                        },\n                        addReservation: {\n                            text: 'Add reservation',\n                            click: () => {\n                                this.setState({ addReservation: true });\n                                this.setState({ showAddReservation: true });\n                            }\n                        },\n                    }}\n                    events={this.props.rest_url + \"reservation\"}\n                    eventClick={this.handleEventClick}\n                    resourceAreaWidth={'12%'}\n                    resourceLabelClassNames={['joeee-booking-resource-label']}\n                    resources={this.props.rest_url + \"room\"}\n                    resourceOrder=\"title\"\n                    resourceAreaColumns={[\n                        {\n                            field: 'title',\n                            headerContent: 'Room #'\n                        },\n                        {\n                            field: 'adults',\n                            headerContent: 'Adults'\n                        },\n                        {\n                            field: 'kids',\n                            headerContent: 'Kids'\n                        }]}\n                    resourceLabelDidMount={this.handleResourceClick}\n                />\n\n                <AddRoom\n                    calendar={this.calendarRef}\n                    show={this.state.showAddRoom}\n                    translate='translateY(-100vh)'\n                    closeRoomAddHandler={this.closeRoomAddHandler}\n                    url={this.props.rest_url}\n                    modifyRoomData={this.state.modifyRoomData}\n                    addRoom={this.state.addRoom}\n                    modifyRoom={this.state.modifyRoom}\n                //activeChecked={this.state.activeChecked}\n                >\n                </AddRoom>\n                <AddReservation\n                    show={this.state.showAddReservation}\n                    translate='translatey(-100vh)'\n                    closeReservationAddHandler={this.closeReservationAddHandler}\n                    url={this.props.rest_url}\n                    calendar={this.calendarRef}\n                    addReservation={this.state.addReservation}\n                    modifyReservation={this.state.modifyReservation}\n                    modifyReservationData={this.state.modifyReservationData}\n                    modifyBookedRoomsData={this.state.modifyBookedRoomsData}\n                    rooms={this.state.rooms}>\n\n                </AddReservation>\n            </div>\n        );\n    }\n}\n\nexport default Calendar;","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Forms/AddRoom.js",[],"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Forms/AddReservation.js",["46","47","48","49","50","51","52","53","54","55"],"import React, { useState, useEffect } from 'react';\nimport { addDays, format, differenceInDays, parse } from 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { removeEmptyFields } from '../../Helpers/removeEmptyFields';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport axios from \"axios\";\nimport { Button, ButtonGroup, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions, FormControlLabel, FormGroup, Grid, List, ListItem, ListSubheader, TextField, FormControl } from '@material-ui/core';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport ReactHookFormSelect from '../../Helpers/ReactHookFormSelect';\nimport BookedRoomList from './BookedRoomList';\n\n\nconst schema = yup.object().shape({\n    arrival: yup.string().required('Please enter an arrival date!'),\n    departure: yup.string().required('Please enter a departure date!'),\n    email: yup.string().email(),\n    first_name: yup.string(),\n    last_name: yup.string().required('Please enter a last name for the booker!'),\n    nationality: yup.string().max(2),\n    confirmation: yup.number().integer().positive(),\n    gender: yup.number().integer(),\n    birth: yup.string(),\n    tin: yup.string(),\n    street: yup.string(),\n    zip: yup.string(),\n    city: yup.string(),\n    country: yup.string().max(2),\n});\n\n\n\nconst AddReservation = (props) => {\n    const { register, handleSubmit, reset, errors, control, setValue } = useForm({ resolver: yupResolver(schema) });\n    const [roomAvailable, setRoomAvailable] = useState([]);\n    const [countries, setCountries] = useState({ \"AT\": \"Austria\" });\n    const [info, setInfo] = useState(\"\");\n    const [infoColor, setInfoColor] = useState(\"green\");\n    const [showInfo, setShowInfo] = useState(\"hidden\");\n    const [arrivalDate, setArrivalDate] = useState(addDays(new Date(), 1));\n    const [departureDate, setDepartureDate] = useState(addDays(new Date(), 2));\n    const [birthDate, setBirthDate] = useState(new Date());\n    const [loading, setLoading] = useState(false);\n    const [roomsBooked, setRoomsBooked] = useState([]);\n\n    useEffect(() => {\n        // We need to check the length otherwise the get request gets triggered infinite times\n        if (Object.keys(countries).length === 1) {\n            axios.get(props.url + \"country\")\n                .then((data) => {\n                    setCountries(data.data);\n                })\n        }\n    });\n\n    useEffect(() => {\n        let checkAvailability = {};\n        checkAvailability.from = format(arrivalDate, 'yyyy-MM-dd') + \" 12:01:00\";\n        checkAvailability.to = format(departureDate, 'yyyy-MM-dd') + \" 11:59:00\";\n        axios.post(props.url + 'room/availability', checkAvailability)\n            .then((rooms) => {\n                setRoomAvailable(rooms.data);\n                console.log(\"Sended availability.\");\n                console.log(rooms.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [arrivalDate, departureDate]);\n\n    useEffect(() => {\n        let fillFormData = props.modifyReservationData;\n        fillFormData.email = props.modifyReservationData.user_email;\n        if (fillFormData.booked_from) {\n            setArrivalDate(Date.parse(fillFormData.booked_from));\n        }\n        if (fillFormData.booked_to) {\n            setDepartureDate(Date.parse(fillFormData.booked_to));\n        }\n\n\n        reset(fillFormData);\n        console.log(fillFormData);\n    }, [props.modifyReservationData, reset]);\n\n    useEffect(() => {\n        let bookedRooms = props.modifyBookedRoomsData;\n        setRoomsBooked(bookedRooms);\n        console.log(roomsBooked);\n    }, [props.modifyBookedRoomsData, reset]);\n\n    const create_userdata = (data) => {\n        let userdata = {};\n        userdata.email = data.email;\n        userdata.first_name = data.first_name;\n        userdata.last_name = data.last_name;\n        userdata.gender = parseInt(data.gender);\n        userdata.birthday = data.birth + \"T12:00:00\";\n        userdata.nationality = data.nationality;\n        userdata.tin = data.tin;\n        userdata.street = data.street;\n        userdata.zip = data.zip;\n        userdata.city = data.city;\n        userdata.country = data.country;\n\n        return userdata;\n    }\n\n    const createReservationData = (data) => {\n        let reservationData = {};\n        let roomData = {};\n        if (typeof data.roomadults !== 'undefined') {\n            data.roomadults.forEach((number, room) => {\n                if (number !== \"\" || data.roomkids[room] !== \"\") {\n                    if (number === \"\") {\n                        number = 0;\n                    }\n                    if (data.roomkids[room] === \"\") {\n                        data.roomkids[room] = 0;\n                    }\n                    roomData[room] = { adults: parseInt(number), kids: parseInt(data.roomkids[room]) };\n                }\n            });\n            reservationData.room_data = roomData;\n        }\n        else {\n            console.log(\"You have to select a room!\");\n            return false;\n        }\n\n        reservationData.booked_from = data.arrival + \"T12:00:00\";\n        reservationData.booked_to = data.departure + \"T12:00:00\";\n        reservationData.confirmation = parseInt(data.confirmation);\n        return reservationData;\n    }\n\n    const createReservation = (reservationData) => {\n        let calendarApi = props.calendar.current.getApi();\n        axios.post(props.url + 'reservation', reservationData)\n            .then((data) => {\n                setLoading(false);\n                console.log(data.response);\n                setRoomAvailable([]);\n                setInfo(\"Successfully saved the reservation.\")\n                setInfoColor(\"green\");\n                setShowInfo(\"visible\");\n                calendarApi.refetchEvents();\n                setTimeout(() => {\n                    reset();\n                    setShowInfo(\"hidden\");\n                    props.closeReservationAddHandler();\n                }, 1500);\n            })\n            .catch((error) => {\n                setInfo(\"Error by saving the reservation!\")\n                console.log(error);\n                setInfoColor(\"red\");\n                setShowInfo(\"visible\");\n                setTimeout(() => {\n                    setShowInfo(\"hidden\");\n                }, 2000);\n            })\n    }\n\n    const onSubmit = (data) => {\n        setLoading(true);\n        console.log(data);\n        data = removeEmptyFields(data);\n        let userdata = create_userdata(data);\n        userdata = removeEmptyFields(userdata);\n        console.log(userdata);\n        let reservationData = createReservationData(data);\n        if (!reservationData) {\n            return;\n        }\n        console.log(reservationData);\n\n        axios.post(props.url + 'user', userdata)\n            .then((data) => {\n                reservationData.person_id = data.data.id;\n                createReservation(reservationData);\n\n            })\n            .catch((error) => {\n                setLoading(false);\n                setInfo(\"Error by creating the user.\")\n                console.log(error);\n                setInfoColor(\"red\");\n                setShowInfo(\"visible\");\n\n                setTimeout(() => {\n                    setShowInfo(\"hidden\");\n                }, 1500);\n            });\n\n    }\n\n    const resetForm = (e) => {\n        e.preventDefault();\n        reset();\n        setRoomAvailable([]);\n        props.closeReservationAddHandler();\n    }\n\n    const handleDepartureDate = (date) => {\n        setDepartureDate(date);\n    }\n\n    const handleArrivalDate = (date) => {\n        setArrivalDate(date);\n    }\n\n    const handleBirthDate = (date) => {\n        setBirthDate(date);\n    }\n\n    const onModify = (data) => {\n        setLoading(true);\n        data = removeEmptyFields(data);\n        console.log(data);\n\n    }\n\n    const deleteReservation = () => {\n        console.log(\"Delete Button clicked.\");\n    }\n\n    const bookedRoomsHelper = () => {\n        roomsBooked.forEach((occupied, room_id) => {\n            return <p>Test</p>;\n        });\n\n\n    }\n\n    return (\n        <Dialog open={props.show} onClose={props.closeReservationAddHandler} maxWidth=\"lg\" fullWidth area-labelledby=\"joeee-booking-reservation-form-title\">\n            <DialogTitle id=\"joeee-booking-reservation-form-title\" >Add Reservation</DialogTitle>\n            <DialogContent>\n                <form onSubmit={props.addReservation ? onSubmit : onModify}>\n                    <Grid container spacing={1}>\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <Grid item xs={12} sm={6}>\n                                <DatePicker\n                                    autoOk\n                                    format=\"yyyy-MM-dd\"\n                                    value={arrivalDate}\n                                    label=\"Arrival\"\n                                    // minDate={addDays(new Date(), 1)} \n                                    name=\"arrival\"\n                                    error={errors.arrival ? true : false}\n                                    helperText={errors.arrival?.message}\n                                    onChange={handleArrivalDate}\n                                    inputRef={register} />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <DatePicker\n                                    autoOk\n                                    format=\"yyyy-MM-dd\"\n                                    value={departureDate}\n                                    label=\"Departure\"\n                                    // minDate={addDays(new Date(), 2)}\n                                    name=\"departure\"\n                                    error={errors.departure ? true : false}\n                                    helperText={errors.departure?.message}\n                                    onChange={handleDepartureDate}\n                                    inputRef={register} />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    label=\"E-Mail\"\n                                    type=\"email\"\n                                    variant=\"outlined\"\n                                    name=\"email\"\n                                    error={errors.email ? true : false}\n                                    helperText={errors.email?.message}\n                                    fullWidth\n                                    inputRef={register} />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    label=\"First Name\"\n                                    type=\"text\"\n                                    variant=\"outlined\"\n                                    name=\"first_name\"\n                                    error={errors.first_name ? true : false}\n                                    helperText={errors.first_name?.message}\n                                    fullWidth\n                                    inputRef={register} />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    label=\"Last Name\"\n                                    type=\"text\"\n                                    variant=\"outlined\"\n                                    name=\"last_name\"\n                                    error={errors.last_name ? true : false}\n                                    helperText={errors.last_name?.message}\n                                    fullWidth\n                                    inputRef={register} />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <ReactHookFormSelect\n                                    id=\"joeee-booking-reservation-nationality\"\n                                    label=\"Nationality\"\n                                    control={control}\n                                    defaultValue=\"AT\"\n                                    variant=\"outlined\"\n                                    name=\"nationality\"\n                                    fullWidth >\n                                    {Object.keys(countries).map((key, index) => {\n                                        return (<option value={key} key={key}>{countries[key]}</option>)\n                                    })}\n                                </ReactHookFormSelect>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <ReactHookFormSelect\n                                    id=\"joeee-booking-reservation-confirmation\"\n                                    label=\"Confirmation Status\"\n                                    control={control}\n                                    variant=\"outlined\"\n                                    defaultValue=\"2\"\n                                    fullWidth\n                                    name=\"confirmation\" >\n                                    <option value=\"2\">Pending</option>\n                                    <option value=\"1\">Confirmed</option>\n                                    <option value=\"3\">Denied</option>\n                                </ReactHookFormSelect>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <ReactHookFormSelect\n                                    id=\"joeee-booking-reservation-gender\"\n                                    label=\"Gender\"\n                                    control={control}\n                                    variant=\"outlined\"\n                                    defaultValue=\"1\"\n                                    fullWidth\n                                    name=\"gender\" >\n                                    <option value=\"1\">Male</option>\n                                    <option value=\"2\">Female</option>\n                                    <option value=\"3\">Other</option>\n                                </ReactHookFormSelect>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <DatePicker\n                                    label=\"Date of Birth\"\n                                    format=\"yyyy-MM-dd\"\n                                    value={birthDate}\n                                    onChange={handleBirthDate}\n                                    disableFuture\n                                    variant=\"outlined\"\n                                    name=\"birth\"\n                                    error={errors.birth ? true : false}\n                                    helperText={errors.birth?.message}\n                                    inputRef={register} />\n                            </Grid>\n                        </MuiPickersUtilsProvider>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"TIN\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                name=\"tin\"\n                                error={errors.tin ? true : false}\n                                helperText={errors.tin?.message}\n                                fullWidth\n                                inputRef={register} />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"Street/House Nr.:\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                name=\"street\"\n                                error={errors.street ? true : false}\n                                helperText={errors.street?.message}\n                                fullWidth\n                                inputRef={register} />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"ZIP\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                name=\"zip\"\n                                error={errors.zip ? true : false}\n                                helperText={errors.zip?.message}\n                                fullWidth\n                                inputRef={register} />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                label=\"City\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                name=\"city\"\n                                error={errors.city ? true : false}\n                                helperText={errors.city?.message}\n                                fullWidth\n                                inputRef={register} />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <ReactHookFormSelect\n                                id=\"joeee-booking-reservation-country\"\n                                label=\"Country\"\n                                control={control}\n                                defaultValue=\"AT\"\n                                variant=\"outlined\"\n                                fullWidth\n                                name=\"country\" >\n                                {Object.keys(countries).map((key, index) => {\n                                    return (<option value={key} key={key}>{countries[key]}</option>)\n                                })}\n                            </ReactHookFormSelect>\n                        </Grid>\n                        {props.modifyReservation && (\n                            <Grid item xs={12} sm={6}>\n                                <BookedRoomList\n                                    bookedRoomsData={props.modifyBookedRoomsData}\n                                    register={register}\n                                    rooms={props.rooms}\n                                    deleteReservation={deleteReservation}\n                                    setValue={setValue} />\n                            </Grid>\n                        )}\n                        <Grid item xs={12} sm={6}>\n                            {props.modifyReservation && bookedRoomsHelper()}\n                            <FormGroup>\n                                <List\n                                    aria-labelledby=\"joeee-booking-reservation-room-list-subheader\"\n                                    subheader={\n                                        <ListSubheader component=\"div\" id=\"joeee-booking-reservation-room-list-subheader\">\n                                            <strong>Available rooms in the selected period:</strong>\n                                        </ListSubheader>\n                                    }\n                                >\n                                    {roomAvailable.map((room, index) => {\n                                        return (\n                                            <ListItem key={index} divider>\n                                                <div className=\"joeee-booking-add-room-to-reservation-label\"><strong>Room: {room.number}</strong></div>\n                                                <TextField\n                                                    label={\"Adults\" + \" (\" + \"max.: \" + room.adults + \")\"}\n                                                    type=\"number\"\n                                                    InputLabelProps={{ shrink: true, }}\n                                                    name={\"roomadults[\" + room.id + \"]\"}\n                                                    variant=\"outlined\"\n                                                    inputProps={{ min: 0, max: room.adults }}\n                                                    inputRef={register}\n                                                />\n                                                <TextField\n                                                    label={\"Kids\" + \" (\" + \"max.: \" + room.kids + \")\"}\n                                                    type=\"number\"\n                                                    InputLabelProps={{ shrink: true, }}\n                                                    name={\"roomkids[\" + room.id + \"]\"}\n                                                    variant=\"outlined\"\n                                                    inputProps={{ min: 0, max: room.kids }}\n                                                    inputRef={register}\n                                                />\n                                            </ListItem>\n                                        )\n                                    })}\n                                </List>\n                            </FormGroup>\n\n                        </Grid>\n                        <p style={{ visibility: showInfo, color: infoColor }}>{info}</p>\n                        {loading && <CircularProgress />}\n\n\n\n                        <Grid item xs={12}>\n                            <FormControl>\n                                {props.addReservation && (\n                                    <ButtonGroup variant=\"contained\">\n                                        <Button color=\"primary\" onClick={handleSubmit(onSubmit)}>Submit</Button>\n                                        <Button color=\"secondary\" onClick={resetForm}>Cancel</Button>\n                                    </ButtonGroup>\n                                )}\n                                {props.modifyReservation && (\n                                    <ButtonGroup variant=\"contained\">\n                                        <Button color=\"primary\" onClick={handleSubmit(onModify)}>Update</Button>\n                                        <Button color=\"secondary\" onClick={resetForm}>Cancel</Button>\n                                    </ButtonGroup>\n                                )}\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </form>\n\n            </DialogContent>\n        </Dialog>\n    );\n}\n\nexport default AddReservation;","/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Helpers/removeEmptyFields.js",[],["56","57"],"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Helpers/ReactHookFormSelect.js",[],"/srv/http/wallerwirt.dev/public_html/wp-content/plugins/joeee-booking/development/admin/bookingcalendar/src/Components/Calendar/Forms/BookedRoomList.js",["58","59","60","61"],"import React from 'react';\nimport { Button, FormGroup, List, ListItem, ListSubheader, TextField } from '@material-ui/core';\n\nconst BookedRoomList = (props) => {\n    return (\n        <FormGroup>\n            <List\n                aria-labelledby=\"joeee-booking-reservation-booked-room-list-subheader\"\n                subheader={\n                    <ListSubheader component=\"div\" id=\"joeee-booking-reservation-booked-room-list-subheader\">\n                        <strong>Booked rooms:</strong>\n                    </ListSubheader>\n                }\n            >\n                {console.log(\"BookedRoomList:\")}\n                {console.log(props.bookedRoomsData)}\n                {props.bookedRoomsData.map((room, id) => {\n                    let currentRoom = props.rooms.find(e => e.id === id.toString());\n                    props.setValue(\"bookedadults[\" + id + \"]\", room.adults);\n                    props.setValue(\"bookedkids[\" + id + \"]\", room.kids);\n                    return (\n                        <ListItem key={id} divider>\n                            <div className=\"joeee-booking-add-room-to-reservation-label\"><strong>Room: {currentRoom.title}</strong></div>\n                            <TextField\n                                label={\"Adults\" + \" (\" + \"max.: \" + currentRoom.adults + \")\"}\n                                type=\"number\"\n                                InputLabelProps={{ shrink: true, }}\n                                name={\"bookedadults[\" + id + \"]\"}\n                                variant=\"outlined\"\n                                inputProps={{ min: 0, max: currentRoom.adults }}\n                                inputRef={props.register}\n                            />\n                            <TextField\n                                label={\"Kids\" + \" (\" + \"max.: \" + currentRoom.kids + \")\"}\n                                type=\"number\"\n                                InputLabelProps={{ shrink: true, }}\n                                name={\"bookedkids[\" + id + \"]\"}\n                                variant=\"outlined\"\n                                inputProps={{ min: 0, max: currentRoom.kids }}\n                                inputRef={props.register}\n                            />\n                            <Button color=\"secondary\" onClick={props.deleteReservation}>Delete</Button>\n                        </ListItem>\n                    )\n                })}\n            </List>\n        </FormGroup>\n    )\n}\n\nexport default BookedRoomList;",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":66,"column":49,"nodeType":"68","messageId":"69","endLine":66,"endColumn":51},{"ruleId":"70","severity":1,"message":"71","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":43},{"ruleId":"70","severity":1,"message":"74","line":2,"column":45,"nodeType":"72","messageId":"73","endLine":2,"endColumn":50},{"ruleId":"70","severity":1,"message":"75","line":9,"column":85,"nodeType":"72","messageId":"73","endLine":9,"endColumn":98},{"ruleId":"70","severity":1,"message":"76","line":9,"column":100,"nodeType":"72","messageId":"73","endLine":9,"endColumn":116},{"ruleId":"77","severity":1,"message":"78","line":70,"column":8,"nodeType":"79","endLine":70,"endColumn":36,"suggestions":"80"},{"ruleId":"77","severity":1,"message":"81","line":91,"column":8,"nodeType":"79","endLine":91,"endColumn":44,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":443,"column":69,"nodeType":"85","messageId":"86","endLine":443,"endColumn":70},{"ruleId":"83","severity":1,"message":"84","line":443,"column":76,"nodeType":"85","messageId":"86","endLine":443,"endColumn":77},{"ruleId":"83","severity":1,"message":"84","line":452,"column":67,"nodeType":"85","messageId":"86","endLine":452,"endColumn":68},{"ruleId":"83","severity":1,"message":"84","line":452,"column":74,"nodeType":"85","messageId":"86","endLine":452,"endColumn":75},{"ruleId":"62","replacedBy":"87"},{"ruleId":"64","replacedBy":"88"},{"ruleId":"83","severity":1,"message":"84","line":25,"column":49,"nodeType":"85","messageId":"86","endLine":25,"endColumn":50},{"ruleId":"83","severity":1,"message":"84","line":25,"column":56,"nodeType":"85","messageId":"86","endLine":25,"endColumn":57},{"ruleId":"83","severity":1,"message":"84","line":34,"column":47,"nodeType":"85","messageId":"86","endLine":34,"endColumn":48},{"ruleId":"83","severity":1,"message":"84","line":34,"column":54,"nodeType":"85","messageId":"86","endLine":34,"endColumn":55},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'differenceInDays' is defined but never used.","Identifier","unusedVar","'parse' is defined but never used.","'DialogActions' is defined but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.url'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has a missing dependency: 'roomsBooked'. Either include it or remove the dependency array.",["92"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [arrivalDate, departureDate, props.url]",{"range":"97","text":"98"},"Update the dependencies array to be: [props.modifyBookedRoomsData, reset, roomsBooked]",{"range":"99","text":"100"},[3067,3095],"[arrivalDate, departureDate, props.url]",[3744,3780],"[props.modifyBookedRoomsData, reset, roomsBooked]"]