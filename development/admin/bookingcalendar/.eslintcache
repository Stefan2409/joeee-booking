[{"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\index.js":"1","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\App.js":"2","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\serviceWorker.js":"3","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Calendar.js":"4","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Forms\\AddRoom.js":"5","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Forms\\AddReservation.js":"6","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Forms\\BookedRoomList.js":"7","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Helpers\\removeEmptyFields.js":"8","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Helpers\\ReactHookFormSelect.js":"9"},{"size":888,"mtime":1612521443151,"results":"10","hashOfConfig":"11"},{"size":281,"mtime":1612509518834,"results":"12","hashOfConfig":"11"},{"size":5227,"mtime":1600846837803,"results":"13","hashOfConfig":"11"},{"size":7854,"mtime":1612509518836,"results":"14","hashOfConfig":"11"},{"size":10994,"mtime":1612509518837,"results":"15","hashOfConfig":"11"},{"size":23926,"mtime":1612509518837,"results":"16","hashOfConfig":"11"},{"size":2548,"mtime":1612509518838,"results":"17","hashOfConfig":"11"},{"size":214,"mtime":1601618203135,"results":"18","hashOfConfig":"11"},{"size":901,"mtime":1604647852293,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1355jb9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\index.js",[],"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\App.js",[],["43","44"],"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\serviceWorker.js",[],"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Calendar.js",["45"],"import React from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\r\nimport calendarInteraction from '@fullcalendar/interaction';\r\nimport './Calendar.css';\r\nimport AddRoom from './Forms/AddRoom';\r\nimport AddReservation from './Forms/AddReservation';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Calendar extends React.Component {\r\n\r\n    state = {\r\n        showAddRoom: false,\r\n        showAddReservation: false,\r\n        addReservation: false,\r\n        modifyReservation: false,\r\n        modifyRoom: false,\r\n        addRoom: false,\r\n        modifyRoomData: {},\r\n        activeChecked: false,\r\n        modifyReservationData: {},\r\n        modifyBookedRoomsData: [],\r\n        rooms: {},\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('joeee-booking/v1/room')\r\n            .then((roomData) => {\r\n                console.log(\"Fetched room data:\");\r\n                this.setState({ rooms: roomData.data });\r\n                console.log(this.state.rooms);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    calendarRef = React.createRef();\r\n\r\n    closeRoomAddHandler = () => {\r\n        this.setState({ showAddRoom: false });\r\n        this.setState({ modifyRoomData: {} });\r\n        this.setState({ addRoom: false });\r\n        this.setState({ modifyRoom: false });\r\n    }\r\n\r\n    closeReservationAddHandler = () => {\r\n        this.setState({ showAddReservation: false });\r\n        this.setState({ modifyReservation: false });\r\n        this.setState({ addReservation: false });\r\n        this.setState({ modifyReservationData: {} });\r\n    }\r\n\r\n    handleEventClick = (clickInfo) => {\r\n        let getReservationData = {};\r\n        getReservationData.id = clickInfo.event.id;\r\n        getReservationData.room_id = clickInfo.event._def.resourceIds;\r\n        console.log(\"Reservation ID:\");\r\n        console.log(getReservationData.id);\r\n        axios.get('joeee-booking/v1/reservation/' + getReservationData.id)\r\n            .then((reservationData) => {\r\n                console.log(\"Reservation Data from Calendar:\");\r\n                console.log(reservationData);\r\n                let roomsBooked = [];\r\n                reservationData.data.map((data) => {\r\n                    console.log(\"Room: \" + data.room_id + \" Kids: \" + data.kids + \" Adults: \" + data.adults);\r\n                    roomsBooked[data.room_id] = { adults: data.adults, kids: data.kids };\r\n                });\r\n                this.setState({ modifyBookedRoomsData: roomsBooked });\r\n                console.log(this.state.modifyBookedRoomsData);\r\n                this.setState({ modifyReservationData: reservationData.data[0] });\r\n                this.setState({ modifyReservation: true });\r\n                this.setState({ showAddReservation: true });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    handleResourceClick = (arg) => {\r\n        arg.el.addEventListener(\"click\", () => {\r\n            console.log(arg.resource.id);\r\n            axios.get('joeee-booking/v1/room/' + arg.resource.id)\r\n                .then((roomInfo) => {\r\n                    console.log(roomInfo.data);\r\n                    if (roomInfo.data.active === \"1\") {\r\n                        this.setState({ activeChecked: true });\r\n                    }\r\n                    else {\r\n                        this.setState({ activeChecked: false });\r\n                    }\r\n\r\n                    this.setState({ modifyRoomData: roomInfo.data });\r\n                    this.setState({ modifyRoom: true });\r\n                    this.setState({ showAddRoom: true });\r\n                }\r\n\r\n                );\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <FullCalendar\r\n                    ref={this.calendarRef}\r\n                    schedulerLicenseKey=\"GPL-My-Project-Is-Open-Source\"\r\n                    plugins={[calendarInteraction, resourceTimelinePlugin]}\r\n                    aspectRatio={1.5}\r\n                    slotDuration={'12:00'}\r\n                    scrollTime={'00:00'}\r\n                    initialView={'resourceTimelineThirtyDays'}\r\n                    views={{\r\n                        resourceTimelineThirtyDays: {\r\n                            type: 'resourceTimeline',\r\n                            duration: { days: 30 },\r\n                            buttonText: '30 days'\r\n                        }\r\n                    }}\r\n                    selectable={true}\r\n                    editable={true}\r\n                    headerToolbar={{\r\n                        left: 'addRoom addReservation today prev next',\r\n                        center: 'title',\r\n                        right: 'resourceTimelineThirtyDays resourceTimelineMonth resourceTimelineWeek',\r\n                    }}\r\n                    customButtons={{\r\n                        addRoom: {\r\n                            text: 'Add room',\r\n                            click: () => {\r\n                                this.setState({ showAddRoom: true });\r\n                                this.setState({ addRoom: true });\r\n                            },\r\n                        },\r\n                        addReservation: {\r\n                            text: 'Add reservation',\r\n                            click: () => {\r\n                                this.setState({ addReservation: true });\r\n                                this.setState({ showAddReservation: true });\r\n                            }\r\n                        },\r\n                    }}\r\n                    events={this.props.rest_url + \"joeee-booking/v1/reservation\"}\r\n                    eventClick={this.handleEventClick}\r\n                    resourceAreaWidth={'12%'}\r\n                    resourceLabelClassNames={['joeee-booking-resource-label']}\r\n                    resources={this.props.rest_url + \"joeee-booking/v1/room\"}\r\n                    resourceOrder=\"title\"\r\n                    resourceAreaColumns={[\r\n                        {\r\n                            field: 'title',\r\n                            headerContent: 'Room #'\r\n                        },\r\n                        {\r\n                            field: 'adults',\r\n                            headerContent: 'Adults'\r\n                        },\r\n                        {\r\n                            field: 'kids',\r\n                            headerContent: 'Kids'\r\n                        }]}\r\n                    resourceLabelDidMount={this.handleResourceClick}\r\n                />\r\n\r\n                <AddRoom\r\n                    calendar={this.calendarRef}\r\n                    show={this.state.showAddRoom}\r\n                    translate='translateY(-100vh)'\r\n                    closeRoomAddHandler={this.closeRoomAddHandler}\r\n                    modifyRoomData={this.state.modifyRoomData}\r\n                    addRoom={this.state.addRoom}\r\n                    modifyRoom={this.state.modifyRoom}\r\n                //activeChecked={this.state.activeChecked}\r\n                >\r\n                </AddRoom>\r\n                <AddReservation\r\n                    show={this.state.showAddReservation}\r\n                    translate='translatey(-100vh)'\r\n                    closeReservationAddHandler={this.closeReservationAddHandler}\r\n                    calendar={this.calendarRef}\r\n                    addReservation={this.state.addReservation}\r\n                    modifyReservation={this.state.modifyReservation}\r\n                    modifyReservationData={this.state.modifyReservationData}\r\n                    modifyBookedRoomsData={this.state.modifyBookedRoomsData}\r\n                    rooms={this.state.rooms}>\r\n\r\n                </AddReservation>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Forms\\AddRoom.js",[],"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Forms\\AddReservation.js",["46","47","48","49","50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\r\nimport { addDays, format, differenceInDays, parse } from 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { removeEmptyFields } from '../../Helpers/removeEmptyFields';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { Button, ButtonGroup, CircularProgress, Dialog, DialogTitle, DialogContent, DialogActions, FormControlLabel, FormGroup, Grid, List, ListItem, ListSubheader, TextField, FormControl } from '@material-ui/core';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport ReactHookFormSelect from '../../Helpers/ReactHookFormSelect';\r\nimport BookedRoomList from './BookedRoomList';\r\n\r\n\r\nconst schema = yup.object().shape({\r\n    arrival: yup.string().required('Please enter an arrival date!'),\r\n    departure: yup.string().required('Please enter a departure date!'),\r\n    email: yup.string().email(),\r\n    first_name: yup.string(),\r\n    last_name: yup.string().required('Please enter a last name for the booker!'),\r\n    nationality: yup.string().max(2),\r\n    confirmation: yup.number().integer().positive(),\r\n    gender: yup.number().integer(),\r\n    birth: yup.string(),\r\n    tin: yup.string(),\r\n    street: yup.string(),\r\n    zip: yup.string(),\r\n    city: yup.string(),\r\n    country: yup.string().max(2),\r\n});\r\n\r\n\r\n\r\nconst AddReservation = (props) => {\r\n    const { register, handleSubmit, reset, errors, control, setValue } = useForm({ resolver: yupResolver(schema) });\r\n    const [roomAvailable, setRoomAvailable] = useState([]);\r\n    const [countries, setCountries] = useState({ \"AT\": \"Austria\" });\r\n    const [info, setInfo] = useState(\"\");\r\n    const [infoColor, setInfoColor] = useState(\"green\");\r\n    const [showInfo, setShowInfo] = useState(\"hidden\");\r\n    const [arrivalDate, setArrivalDate] = useState(addDays(new Date(), 1));\r\n    const [departureDate, setDepartureDate] = useState(addDays(new Date(), 2));\r\n    const [birthDate, setBirthDate] = useState(new Date());\r\n    const [loading, setLoading] = useState(false);\r\n    const [roomsBooked, setRoomsBooked] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // We need to check the length otherwise the get request gets triggered infinite times\r\n        if (Object.keys(countries).length === 1) {\r\n            axios.get(\"joeee-booking/v1/country\")\r\n                .then((data) => {\r\n                    setCountries(data.data);\r\n                })\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        let checkAvailability = {};\r\n        checkAvailability.from = format(arrivalDate, 'yyyy-MM-dd') + \" 12:01:00\";\r\n        checkAvailability.to = format(departureDate, 'yyyy-MM-dd') + \" 11:59:00\";\r\n        axios.post('joeee-booking/v1/room/availability', checkAvailability)\r\n            .then((rooms) => {\r\n                setRoomAvailable(rooms.data);\r\n                console.log(\"Sended availability.\");\r\n                console.log(rooms.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [arrivalDate, departureDate]);\r\n\r\n    useEffect(() => {\r\n        let fillFormData = props.modifyReservationData;\r\n        fillFormData.email = props.modifyReservationData.user_email;\r\n        if (fillFormData.booked_from) {\r\n            setArrivalDate(Date.parse(fillFormData.booked_from));\r\n        }\r\n        if (fillFormData.booked_to) {\r\n            setDepartureDate(Date.parse(fillFormData.booked_to));\r\n        }\r\n\r\n\r\n        reset(fillFormData);\r\n        console.log(fillFormData);\r\n    }, [props.modifyReservationData, reset]);\r\n\r\n    useEffect(() => {\r\n        let bookedRooms = props.modifyBookedRoomsData;\r\n        setRoomsBooked(bookedRooms);\r\n        console.log(roomsBooked);\r\n    }, [props.modifyBookedRoomsData, reset]);\r\n\r\n    const create_userdata = (data) => {\r\n        let userdata = {};\r\n        userdata.email = data.email;\r\n        userdata.first_name = data.first_name;\r\n        userdata.last_name = data.last_name;\r\n        userdata.gender = parseInt(data.gender);\r\n        userdata.birthday = data.birth + \"T12:00:00\";\r\n        userdata.nationality = data.nationality;\r\n        userdata.tin = data.tin;\r\n        userdata.street = data.street;\r\n        userdata.zip = data.zip;\r\n        userdata.city = data.city;\r\n        userdata.country = data.country;\r\n\r\n        return userdata;\r\n    }\r\n\r\n    const createReservationData = (data) => {\r\n        let reservationData = {};\r\n        let roomData = {};\r\n        if (typeof data.roomadults !== 'undefined') {\r\n            data.roomadults.forEach((number, room) => {\r\n                if (number !== \"\" || data.roomkids[room] !== \"\") {\r\n                    if (number === \"\") {\r\n                        number = 0;\r\n                    }\r\n                    if (data.roomkids[room] === \"\") {\r\n                        data.roomkids[room] = 0;\r\n                    }\r\n                    roomData[room] = { adults: parseInt(number), kids: parseInt(data.roomkids[room]) };\r\n                }\r\n            });\r\n            reservationData.room_data = roomData;\r\n        }\r\n        else {\r\n            console.log(\"You have to select a room!\");\r\n            return false;\r\n        }\r\n\r\n        reservationData.booked_from = data.arrival + \"T12:00:00\";\r\n        reservationData.booked_to = data.departure + \"T12:00:00\";\r\n        reservationData.confirmation = parseInt(data.confirmation);\r\n        return reservationData;\r\n    }\r\n\r\n    const createReservation = (reservationData) => {\r\n        let calendarApi = props.calendar.current.getApi();\r\n        axios.post('joeee-booking/v1/reservation', reservationData)\r\n            .then((data) => {\r\n                setLoading(false);\r\n                console.log(data.response);\r\n                setRoomAvailable([]);\r\n                setInfo(\"Successfully saved the reservation.\")\r\n                setInfoColor(\"green\");\r\n                setShowInfo(\"visible\");\r\n                calendarApi.refetchEvents();\r\n                setTimeout(() => {\r\n                    reset();\r\n                    setShowInfo(\"hidden\");\r\n                    props.closeReservationAddHandler();\r\n                }, 1500);\r\n            })\r\n            .catch((error) => {\r\n                setInfo(\"Error by saving the reservation!\")\r\n                console.log(error);\r\n                setInfoColor(\"red\");\r\n                setShowInfo(\"visible\");\r\n                setTimeout(() => {\r\n                    setShowInfo(\"hidden\");\r\n                }, 2000);\r\n            })\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        setLoading(true);\r\n        console.log(data);\r\n        data = removeEmptyFields(data);\r\n        let userdata = create_userdata(data);\r\n        userdata = removeEmptyFields(userdata);\r\n        console.log(userdata);\r\n        let reservationData = createReservationData(data);\r\n        if (!reservationData) {\r\n            return;\r\n        }\r\n        console.log(reservationData);\r\n\r\n        axios.post('joeee-booking/v1/user', userdata)\r\n            .then((data) => {\r\n                reservationData.person_id = data.data.id;\r\n                createReservation(reservationData);\r\n\r\n            })\r\n            .catch((error) => {\r\n                setLoading(false);\r\n                setInfo(\"Error by creating the user.\")\r\n                console.log(error);\r\n                setInfoColor(\"red\");\r\n                setShowInfo(\"visible\");\r\n\r\n                setTimeout(() => {\r\n                    setShowInfo(\"hidden\");\r\n                }, 1500);\r\n            });\r\n\r\n    }\r\n\r\n    const resetForm = (e) => {\r\n        e.preventDefault();\r\n        reset();\r\n        setRoomAvailable([]);\r\n        props.closeReservationAddHandler();\r\n    }\r\n\r\n    const handleDepartureDate = (date) => {\r\n        setDepartureDate(date);\r\n    }\r\n\r\n    const handleArrivalDate = (date) => {\r\n        setArrivalDate(date);\r\n    }\r\n\r\n    const handleBirthDate = (date) => {\r\n        setBirthDate(date);\r\n    }\r\n\r\n    const onModify = (data) => {\r\n        setLoading(true);\r\n        console.log(\"onModify data: \");\r\n        data = removeEmptyFields(data);\r\n        console.log(data);\r\n        let updatedRooms = {};\r\n        data.bookedadults.forEach( (element, index) => {\r\n            updatedRooms[index] = {adults: parseInt(element)};\r\n        });\r\n\r\n        data.bookedkids.forEach( (element, index) => {\r\n            updatedRooms[index] = {...updatedRooms[index], kids: parseInt(element)};\r\n        });\r\n        console.log(updatedRooms);\r\n\r\n        let newRooms = {};\r\n        data.roomadults.forEach( (element, index) => {\r\n            newRooms[index] = {adults: parseInt(element)};\r\n        });\r\n\r\n        data.roomkids.forEach( (element, index) => {\r\n            newRooms[index] = {...newRooms[index], kids: parseInt(element)};\r\n        });\r\n        console.log(newRooms);\r\n\r\n\r\n        setLoading(false);\r\n\r\n\r\n    }\r\n\r\n    const deleteReservation = () => {\r\n        console.log(\"Delete Button clicked.\");\r\n    }\r\n\r\n    const bookedRoomsHelper = () => {\r\n        roomsBooked.forEach((occupied, room_id) => {\r\n            return <p>Test</p>;\r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.show} onClose={props.closeReservationAddHandler} maxWidth=\"lg\" fullWidth area-labelledby=\"joeee-booking-reservation-form-title\">\r\n            <DialogTitle id=\"joeee-booking-reservation-form-title\" >Add Reservation</DialogTitle>\r\n            <DialogContent>\r\n                <form onSubmit={props.addReservation ? onSubmit : onModify}>\r\n                    <Grid container spacing={1}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <DatePicker\r\n                                    autoOk\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={arrivalDate}\r\n                                    label=\"Arrival\"\r\n                                    // minDate={addDays(new Date(), 1)} \r\n                                    name=\"arrival\"\r\n                                    error={errors.arrival ? true : false}\r\n                                    helperText={errors.arrival?.message}\r\n                                    onChange={handleArrivalDate}\r\n                                    inputRef={register} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <DatePicker\r\n                                    autoOk\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={departureDate}\r\n                                    label=\"Departure\"\r\n                                    // minDate={addDays(new Date(), 2)}\r\n                                    name=\"departure\"\r\n                                    error={errors.departure ? true : false}\r\n                                    helperText={errors.departure?.message}\r\n                                    onChange={handleDepartureDate}\r\n                                    inputRef={register} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"E-Mail\"\r\n                                    type=\"email\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"email\"\r\n                                    error={errors.email ? true : false}\r\n                                    helperText={errors.email?.message}\r\n                                    fullWidth\r\n                                    inputRef={register} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"First Name\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"first_name\"\r\n                                    error={errors.first_name ? true : false}\r\n                                    helperText={errors.first_name?.message}\r\n                                    fullWidth\r\n                                    inputRef={register} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    label=\"Last Name\"\r\n                                    type=\"text\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"last_name\"\r\n                                    error={errors.last_name ? true : false}\r\n                                    helperText={errors.last_name?.message}\r\n                                    fullWidth\r\n                                    inputRef={register} />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <ReactHookFormSelect\r\n                                    id=\"joeee-booking-reservation-nationality\"\r\n                                    label=\"Nationality\"\r\n                                    control={control}\r\n                                    defaultValue=\"AT\"\r\n                                    variant=\"outlined\"\r\n                                    name=\"nationality\"\r\n                                    fullWidth >\r\n                                    {Object.keys(countries).map((key, index) => {\r\n                                        return (<option value={key} key={key}>{countries[key]}</option>)\r\n                                    })}\r\n                                </ReactHookFormSelect>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <ReactHookFormSelect\r\n                                    id=\"joeee-booking-reservation-confirmation\"\r\n                                    label=\"Confirmation Status\"\r\n                                    control={control}\r\n                                    variant=\"outlined\"\r\n                                    defaultValue=\"2\"\r\n                                    fullWidth\r\n                                    name=\"confirmation\" >\r\n                                    <option value=\"2\">Pending</option>\r\n                                    <option value=\"1\">Confirmed</option>\r\n                                    <option value=\"3\">Denied</option>\r\n                                </ReactHookFormSelect>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <ReactHookFormSelect\r\n                                    id=\"joeee-booking-reservation-gender\"\r\n                                    label=\"Gender\"\r\n                                    control={control}\r\n                                    variant=\"outlined\"\r\n                                    defaultValue=\"1\"\r\n                                    fullWidth\r\n                                    name=\"gender\" >\r\n                                    <option value=\"1\">Male</option>\r\n                                    <option value=\"2\">Female</option>\r\n                                    <option value=\"3\">Other</option>\r\n                                </ReactHookFormSelect>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <DatePicker\r\n                                    label=\"Date of Birth\"\r\n                                    format=\"yyyy-MM-dd\"\r\n                                    value={birthDate}\r\n                                    onChange={handleBirthDate}\r\n                                    disableFuture\r\n                                    variant=\"outlined\"\r\n                                    name=\"birth\"\r\n                                    error={errors.birth ? true : false}\r\n                                    helperText={errors.birth?.message}\r\n                                    inputRef={register} />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label=\"TIN\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                name=\"tin\"\r\n                                error={errors.tin ? true : false}\r\n                                helperText={errors.tin?.message}\r\n                                fullWidth\r\n                                inputRef={register} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label=\"Street/House Nr.:\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                name=\"street\"\r\n                                error={errors.street ? true : false}\r\n                                helperText={errors.street?.message}\r\n                                fullWidth\r\n                                inputRef={register} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label=\"ZIP\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                name=\"zip\"\r\n                                error={errors.zip ? true : false}\r\n                                helperText={errors.zip?.message}\r\n                                fullWidth\r\n                                inputRef={register} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                label=\"City\"\r\n                                type=\"text\"\r\n                                variant=\"outlined\"\r\n                                name=\"city\"\r\n                                error={errors.city ? true : false}\r\n                                helperText={errors.city?.message}\r\n                                fullWidth\r\n                                inputRef={register} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <ReactHookFormSelect\r\n                                id=\"joeee-booking-reservation-country\"\r\n                                label=\"Country\"\r\n                                control={control}\r\n                                defaultValue=\"AT\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                name=\"country\" >\r\n                                {Object.keys(countries).map((key, index) => {\r\n                                    return (<option value={key} key={key}>{countries[key]}</option>)\r\n                                })}\r\n                            </ReactHookFormSelect>\r\n                        </Grid>\r\n                        {props.modifyReservation && (\r\n                            <Grid item xs={12} sm={6}>\r\n                                <BookedRoomList\r\n                                    bookedRoomsData={props.modifyBookedRoomsData}\r\n                                    register={register}\r\n                                    rooms={props.rooms}\r\n                                    deleteReservation={deleteReservation}\r\n                                    setValue={setValue} />\r\n                            </Grid>\r\n                        )}\r\n                        <Grid item xs={12} sm={6}>\r\n                            {props.modifyReservation && bookedRoomsHelper()}\r\n                            <FormGroup>\r\n                                <List\r\n                                    aria-labelledby=\"joeee-booking-reservation-room-list-subheader\"\r\n                                    subheader={\r\n                                        <ListSubheader component=\"div\" id=\"joeee-booking-reservation-room-list-subheader\">\r\n                                            <strong>Available rooms in the selected period:</strong>\r\n                                        </ListSubheader>\r\n                                    }\r\n                                >\r\n                                    {roomAvailable.map((room, index) => {\r\n                                        return (\r\n                                            <ListItem key={index} divider>\r\n                                                <div className=\"joeee-booking-add-room-to-reservation-label\"><strong>Room: {room.number}</strong></div>\r\n                                                <TextField\r\n                                                    label={\"Adults\" + \" (\" + \"max.: \" + room.adults + \")\"}\r\n                                                    type=\"number\"\r\n                                                    InputLabelProps={{ shrink: true, }}\r\n                                                    name={\"roomadults[\" + room.id + \"]\"}\r\n                                                    variant=\"outlined\"\r\n                                                    inputProps={{ min: 0, max: room.adults }}\r\n                                                    inputRef={register}\r\n                                                />\r\n                                                <TextField\r\n                                                    label={\"Kids\" + \" (\" + \"max.: \" + room.kids + \")\"}\r\n                                                    type=\"number\"\r\n                                                    InputLabelProps={{ shrink: true, }}\r\n                                                    name={\"roomkids[\" + room.id + \"]\"}\r\n                                                    variant=\"outlined\"\r\n                                                    inputProps={{ min: 0, max: room.kids }}\r\n                                                    inputRef={register}\r\n                                                />\r\n                                            </ListItem>\r\n                                        )\r\n                                    })}\r\n                                </List>\r\n                            </FormGroup>\r\n\r\n                        </Grid>\r\n                        <p style={{ visibility: showInfo, color: infoColor }}>{info}</p>\r\n                        {loading && <CircularProgress />}\r\n\r\n\r\n\r\n                        <Grid item xs={12}>\r\n                            <FormControl>\r\n                                {props.addReservation && (\r\n                                    <ButtonGroup variant=\"contained\">\r\n                                        <Button color=\"primary\" onClick={handleSubmit(onSubmit)}>Submit</Button>\r\n                                        <Button color=\"secondary\" onClick={resetForm}>Cancel</Button>\r\n                                    </ButtonGroup>\r\n                                )}\r\n                                {props.modifyReservation && (\r\n                                    <ButtonGroup variant=\"contained\">\r\n                                        <Button color=\"primary\" onClick={handleSubmit(onModify)}>Update</Button>\r\n                                        <Button color=\"secondary\" onClick={resetForm}>Cancel</Button>\r\n                                    </ButtonGroup>\r\n                                )}\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n\r\n            </DialogContent>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default AddReservation;","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Calendar\\Forms\\BookedRoomList.js",["55","56","57","58"],"import React from 'react';\r\nimport { Button, FormGroup, List, ListItem, ListSubheader, TextField } from '@material-ui/core';\r\n\r\nconst BookedRoomList = (props) => {\r\n    return (\r\n        <FormGroup>\r\n            <List\r\n                aria-labelledby=\"joeee-booking-reservation-booked-room-list-subheader\"\r\n                subheader={\r\n                    <ListSubheader component=\"div\" id=\"joeee-booking-reservation-booked-room-list-subheader\">\r\n                        <strong>Booked rooms:</strong>\r\n                    </ListSubheader>\r\n                }\r\n            >\r\n                {console.log(\"BookedRoomList:\")}\r\n                {console.log(props.bookedRoomsData)}\r\n                {props.bookedRoomsData.map((room, id) => {\r\n                    let currentRoom = props.rooms.find(e => e.id === id.toString());\r\n                    props.setValue(\"bookedadults[\" + id + \"]\", room.adults);\r\n                    props.setValue(\"bookedkids[\" + id + \"]\", room.kids);\r\n                    return (\r\n                        <ListItem key={id} divider>\r\n                            <div className=\"joeee-booking-add-room-to-reservation-label\"><strong>Room: {currentRoom.title}</strong></div>\r\n                            <TextField\r\n                                label={\"Adults\" + \" (\" + \"max.: \" + currentRoom.adults + \")\"}\r\n                                type=\"number\"\r\n                                InputLabelProps={{ shrink: true, }}\r\n                                name={\"bookedadults[\" + id + \"]\"}\r\n                                variant=\"outlined\"\r\n                                inputProps={{ min: 0, max: currentRoom.adults }}\r\n                                inputRef={props.register}\r\n                            />\r\n                            <TextField\r\n                                label={\"Kids\" + \" (\" + \"max.: \" + currentRoom.kids + \")\"}\r\n                                type=\"number\"\r\n                                InputLabelProps={{ shrink: true, }}\r\n                                name={\"bookedkids[\" + id + \"]\"}\r\n                                variant=\"outlined\"\r\n                                inputProps={{ min: 0, max: currentRoom.kids }}\r\n                                inputRef={props.register}\r\n                            />\r\n                            <Button color=\"secondary\" onClick={props.deleteReservation}>Delete</Button>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </FormGroup>\r\n    )\r\n}\r\n\r\nexport default BookedRoomList;","C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Helpers\\removeEmptyFields.js",[],["59","60"],"C:\\xampp\\htdocs\\wp-content\\plugins\\joeee-booking\\development\\admin\\bookingcalendar\\src\\Components\\Helpers\\ReactHookFormSelect.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":66,"column":49,"nodeType":"67","messageId":"68","endLine":66,"endColumn":51},{"ruleId":"69","severity":1,"message":"70","line":2,"column":27,"nodeType":"71","messageId":"72","endLine":2,"endColumn":43},{"ruleId":"69","severity":1,"message":"73","line":2,"column":45,"nodeType":"71","messageId":"72","endLine":2,"endColumn":50},{"ruleId":"69","severity":1,"message":"74","line":9,"column":85,"nodeType":"71","messageId":"72","endLine":9,"endColumn":98},{"ruleId":"69","severity":1,"message":"75","line":9,"column":100,"nodeType":"71","messageId":"72","endLine":9,"endColumn":116},{"ruleId":"76","severity":1,"message":"77","line":91,"column":8,"nodeType":"78","endLine":91,"endColumn":44,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":467,"column":69,"nodeType":"82","messageId":"83","endLine":467,"endColumn":70},{"ruleId":"80","severity":1,"message":"81","line":467,"column":76,"nodeType":"82","messageId":"83","endLine":467,"endColumn":77},{"ruleId":"80","severity":1,"message":"81","line":476,"column":67,"nodeType":"82","messageId":"83","endLine":476,"endColumn":68},{"ruleId":"80","severity":1,"message":"81","line":476,"column":74,"nodeType":"82","messageId":"83","endLine":476,"endColumn":75},{"ruleId":"80","severity":1,"message":"81","line":25,"column":49,"nodeType":"82","messageId":"83","endLine":25,"endColumn":50},{"ruleId":"80","severity":1,"message":"81","line":25,"column":56,"nodeType":"82","messageId":"83","endLine":25,"endColumn":57},{"ruleId":"80","severity":1,"message":"81","line":34,"column":47,"nodeType":"82","messageId":"83","endLine":34,"endColumn":48},{"ruleId":"80","severity":1,"message":"81","line":34,"column":54,"nodeType":"82","messageId":"83","endLine":34,"endColumn":55},{"ruleId":"61","replacedBy":"84"},{"ruleId":"63","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'differenceInDays' is defined but never used.","Identifier","unusedVar","'parse' is defined but never used.","'DialogActions' is defined but never used.","'FormControlLabel' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'roomsBooked'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [props.modifyBookedRoomsData, reset, roomsBooked]",{"range":"91","text":"92"},[3844,3880],"[props.modifyBookedRoomsData, reset, roomsBooked]"]